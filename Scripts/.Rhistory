(p_dem_cv | p_slope_cv | p_lst_cv | p_prec_cv | plot_spacer() + plot_spacer()) +
plot_layout(widths = c(1, 1, 1, 1, 1))
ggsave(
here::here("Figures", "mosaico_mapa_covariables.png"),
plot   = p_mosaico,
width  = 12, height = 6, dpi = 350
)
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -81, to = -65, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -80, to = -64, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
# Definir áreas de cada panel
layout <- area(
t = c(1, 1, 1, 1, 1, 2, 2, 2, 2),
l = c(1, 2, 3, 4, 5, 1, 2, 3, 4),
b = c(1, 1, 1, 1, 2, 2, 2, 2, 2),
r = c(1, 2, 3, 4, 5, 1, 2, 3, 4)
)
# Armar el mosaico con control explícito
p_mosaico <- p_dem_mean + p_slope_mean + p_lst_mean + p_prec_mean + p_mapa_geo +
p_dem_cv   + p_slope_cv   + p_lst_cv   + p_prec_cv +
plot_layout(design = layout) &
theme(
plot.margin = margin(5, 5, 5, 5)
)
ggsave(
here::here("Figures", "mosaico_mapa_covariables.png"),
plot   = p_mosaico,
width  = 12, height = 6, dpi = 350
)
map_cv <- function(data, var, pal, titulo){
ggplot(data |> dplyr::filter({{ var }} > 0)) + #Descarta valores cero o negativos antes de transformar
geom_sf(aes(fill = {{ var }}), colour = NA) +
scale_fill_gradientn(
colours = pal,
trans   = "log10", # usa escala log-10 para contrastar valores bajos y altos de CV
breaks  = scales::trans_breaks("log10", function(x) 10^x),
labels  = scales::label_scientific(digits = 1),
na.value = "white",
guide   = guide_colourbar(
direction      = "vertical",
barwidth       = unit(0.25, "cm"),
barheight      = unit(2.5,  "cm"),
title.position = "top"
),
name    = "CV"
) +
labs(title = titulo) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -79, to = -70, by = 3)) +
theme_minimal() +
theme(legend.justification = c("right", "top"))
}
p_dem_cv   <- map_cv(modelo_df, dem_cv,        pal_dem_cv,   "CV de DEM")
p_dem_cv   <- map_cv(modelo_df, dem_cv,        pal_dem_cv,   "CV de DEM")
p_slope_cv <- map_cv(modelo_df, slope_cv,      pal_slope_cv, "CV de pendiente")
p_lst_cv   <- map_cv(modelo_df, lst_cv_temp,   pal_lst_cv,   "CV de LST")
p_lst_cv   <- map_cv(modelo_df, lst_cv_temp,   pal_lst_cv,   "CV de LST")
p_prec_cv  <- map_cv(modelo_df, precip_cv_temp,pal_prec_cv,  "CV de precipitación")
map_cv <- function(data, var, pal, titulo){
ggplot(data |> dplyr::filter({{ var }} > 0)) + #Descarta valores cero o negativos antes de transformar
geom_sf(aes(fill = {{ var }}), colour = NA) +
scale_fill_gradientn(
colours = pal,
trans   = "log10", # usa escala log-10 para contrastar valores bajos y altos de CV
breaks  = scales::trans_breaks("log10", function(x) 10^x),
labels  = scales::label_scientific(digits = 1),
na.value = "white",
guide   = guide_colourbar(
direction      = "vertical",
barwidth       = unit(0.25, "cm"),
barheight      = unit(2.5,  "cm"),
title.position = "top"
),
name    = "CV"
) +
labs(title = titulo) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -79, to = -70, by = 3)) +
theme_minimal() +
theme(legend.justification = c("right", "top"),
plot.title = element_text(size = 10, hjust = 0.5))  # centrado y tamaño menor)
}
map_cv <- function(data, var, pal, titulo){
ggplot(data |> dplyr::filter({{ var }} > 0)) + #Descarta valores cero o negativos antes de transformar
geom_sf(aes(fill = {{ var }}), colour = NA) +
scale_fill_gradientn(
colours = pal,
trans   = "log10", # usa escala log-10 para contrastar valores bajos y altos de CV
breaks  = scales::trans_breaks("log10", function(x) 10^x),
labels  = scales::label_scientific(digits = 1),
na.value = "white",
guide   = guide_colourbar(
direction      = "vertical",
barwidth       = unit(0.25, "cm"),
barheight      = unit(2.5,  "cm"),
title.position = "top"
),
name    = "CV"
) +
labs(title = titulo) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -79, to = -70, by = 3)) +
theme_minimal() +
theme(legend.justification = c("right", "top"),
plot.title = element_text(size = 10, hjust = 0.5))  # centrado y tamaño menor)
}
p_dem_cv   <- map_cv(modelo_df, dem_cv,        pal_dem_cv,   "CV de DEM")
p_dem_cv   <- map_cv(modelo_df, dem_cv,        pal_dem_cv,   "CV de DEM")
p_slope_cv <- map_cv(modelo_df, slope_cv,      pal_slope_cv, "CV de pendiente")
p_lst_cv   <- map_cv(modelo_df, lst_cv_temp,   pal_lst_cv,   "CV de LST")
p_prec_cv  <- map_cv(modelo_df, precip_cv_temp,pal_prec_cv,  "CV de precipitación")
# 2. Asegúrate de que p_mapa_geo tenga una leyenda ajustada
p_mapa_geo <- p_mapa_geo +
theme(
legend.position = "top",
legend.justification = "center",
legend.direction = "horizontal",
legend.margin = margin(t = 0, b = -10),
legend.box.margin = margin(0, 0, 0, 0),
plot.margin = margin(5, 5, 5, 5),
panel.spacing = unit(0, "cm")
)
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
# 1. Definir disposición
design <- patchwork::area(
t = c(1, 1, 1, 1, 1, 2, 2, 2, 2),
l = c(1, 2, 3, 4, 5, 1, 2, 3, 4),
b = c(1, 1, 1, 1, 1, 2, 2, 2, 2),
r = c(1, 2, 3, 4, 5, 1, 2, 3, 4)
)
# 3. Componer los paneles en el orden correcto
p_mosaico <- p_dem_mean + p_slope_mean + p_lst_mean + p_prec_mean + p_mapa_geo +
p_dem_cv   + p_slope_cv   + p_lst_cv   + p_prec_cv +
plot_layout(design = design) &
theme(plot.margin = margin(5, 5, 5, 5))
ggsave(
here::here("Figures", "mosaico_mapa_covariables.png"),
plot   = p_mosaico,
width  = 12, height = 6, dpi = 350
)
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
+
guides(fill = guide_legend(
title.position = "top",
title.hjust = 0.5
)) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
guides(fill = guide_legend(
title.position = "top",
title.hjust = 0.5
)) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
Sin_dato     = "gray95"
),
drop = FALSE
) +
guides(fill = guide_legend(label.position = "top")) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
'NA'     = "gray95"
),
drop = FALSE
) +
guides(fill = guide_legend(label.position = "top")) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
# Descarga del mapa geológico 1 : 500 000 y clasificación de unidades por era (más joven)
geo_sf_wgs84 <- sf::st_read(url_solicitud) |>
sf::st_make_valid() |>
mutate(
# LIMPIEZA -----------------------------------------------------------------
edad_limpia = Edad %>%
str_replace_all("\\?", "") |>            # quita “?”
str_trim() |>                              # quita espacios extremos
str_to_lower() |>                         # pasa a minúsculas
stringi::stri_trans_general("Latin-ASCII") |> # quita acentos
str_replace_all(pattern = "-", replacement = " ") |>
str_squish(),                               # colapsa espacios múltiples
# RECLASIFICACIÓN POR ERA (la MÁS JOVEN domina) ----------------------------
era_geo = case_when(
# 1) CENOZOICO  ----------------------------------------------------------
str_detect(edad_limpia, regex(
"paleoceno|eoceno|oligoceno|mioceno|plioceno|pleistoceno|holoceno|
aquitaniano|burdigaliano|langhiano|serravaliano|tortoniano|messiniano|
zancliano|rupeliano|thanetiano|lutetiano|bartoniano|priaboniano|
selandiano|daniense|chattiano|cuaternario|mesiniano",
ignore_case = TRUE)
) ~ "Cz",
# 2) MESOZOICO  ----------------------------------------------------------
str_detect(edad_limpia, regex(
"triasico|jurasico|cretacico|berriasiano|valanginiano|barremiano|
aptiano|albiano|cenomaniano|turoniano|coniaciano|santoniano|
campaniano|maastrichtiano",
ignore_case = TRUE)
) ~ "Mz",
# 3) PALEOZOICO ----------------------------------------------------------
str_detect(edad_limpia, regex(
"\\bcambrico\\b|\\bordovicico\\b|\\bsilurico\\b|\\bdevonico\\b|
\\bmississipiano\\b|\\bpridoliano\\b|\\bcarbonifero\\b|
\\bpennsylvaniano\\b|\\bpermico\\b|\\bpaleozoico\\b",
ignore_case = TRUE
)) ~ "Pz",
# 4) PROTEROZOICO --------------------------------------------------------
str_detect(edad_limpia, regex(
"sideriano|rhyaciano|orosiriano|statheriano|calymmiano|ectasiano|
steniano|toniano|criogenico|ediacariano|mesoproterozoico|
neoproterozoico|proterozoico",
ignore_case = TRUE)
) ~ "Ptz",
# 5) SIN DATO ------------------------------------------------------------
TRUE ~ "NA"
)
) |>
select(descripcion_geo = Descripcion, era_geo, edad_limpia)
#Se visualizan datos geográficamente (edad, sin leyenda)
p_mapa_geo <- ggplot2::ggplot(geo_sf_wgs84) +
geom_sf(aes(fill = era_geo), color = NA) +
scale_fill_manual(
breaks = c("Cz", "Mz", "Pz", "Ptz", "Sin_dato"),
values = c(
Cz    = "#f8ea1e",
Mz    = "#5bc5ea",
Pz   = "#a9c6a8",
Ptz = "#ea5173",
'NA'     = "gray95"
),
drop = FALSE
) +
guides(fill = guide_legend(label.position = "top")) +
coord_sf(expand = FALSE) +
scale_x_continuous(breaks = seq(from = -82, to = -66, by = 4)) +
theme_minimal(base_size = 10) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
axis.title = element_blank(),
legend.position = "top",                  # parte superior
legend.justification = "center",          # centrado
legend.direction = "horizontal",          # orientación horizontal
legend.key.size = unit(0.4, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),           # in título (refuerzo)
panel.background = element_rect(fill = "gray95", color = NA),
panel.border = element_rect(color = "gray95", fill = NA, linewidth = 0.5)
)
p_mapa_geo
# 1. Definir grilla explícita
layout <- area(
t = c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2),
l = c(1, 2, 3, 4, 5, 1, 2, 3, 4, 5),
b = c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2),
r = c(1, 2, 3, 4, 5, 1, 2, 3, 4, 5)
)
# 2. Usar un espacio vacío real en posición (5, 2)
espacio_vacio <- ggplot() + theme_void()
# 3. Componer el mosaico
p_mosaico <- p_dem_mean + p_slope_mean + p_lst_mean + p_prec_mean + p_mapa_geo +
p_dem_cv   + p_slope_cv   + p_lst_cv   + p_prec_cv   + espacio_vacio +
plot_layout(design = layout)
ggsave(
here::here("Figures", "mosaico_mapa_covariables.png"),
plot   = p_mosaico,
width  = 12, height = 6, dpi = 350
)
