p_scatter <- ggplot(modelo_sf,
aes(x = log_Qdens, y = lag_raw, colour = cluster_raw)) +
geom_point(alpha = .8, size = .9) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = 0, linetype = "dashed", colour = "grey60") +
geom_smooth(method = "lm", se = FALSE, linewidth = .4, colour = "black") +
scale_colour_manual(values = col_lisa, name = "") +
labs(x = "log₁₀(Q/Área)", y = "Lag espacial") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
### B) Mapa de clústeres LISA ----------------------------------------------
p_lisa <- ggplot(modelo_sf) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa, name = "Clúster LISA") +
labs(title = "Clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
### C) Mapa de valores Ii ---------------------------------------------------
p_Ii <- ggplot(modelo_sf) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_gradientn(colours = pal_continuo,
name = "Ii", na.value = "white") +
labs(title = "Ii local") +
theme_minimal(base_size = 11)
(p_scatter | p_lisa | p_Ii) + patchwork::plot_layout(guides = "collect")
# --- 1· Segmentos y centroides --------------------------------------------
coords_mat <- sf::st_coordinates(sf::st_centroid(modelo_sf_s$geometry))
seg_df <- purrr::map_dfr(
seq_along(nb_queen),
\(i){
vec <- nb_queen[[i]]
if (!length(vec)) return(NULL)           # isla → omitir
data.frame(
id   = i,
x    = coords_mat[i, 1],  y = coords_mat[i, 2],
xend = coords_mat[vec, 1], yend = coords_mat[vec, 2]
)
}
)
lisa_raw <- spdep::localmoran(modelo_sf$log_Qdens,
lw_queen, zero.policy = TRUE)
## ------------------------------------------------------------------
## 1 · Calcular lag espacial y LISA  (solo observaciones válidas)
## ------------------------------------------------------------------
lag_raw_vec <- spdep::lag.listw(lw_sub, y_raw[valid_idx])
lisa_raw <- spdep::localmoran(y_raw[valid_idx], lw_sub,
zero.policy = TRUE)
## ------------------------------------------------------------------
## 2 · Escribir resultados en el sf completo
##   (rellena con NA para los polígonos que no entran)
## ------------------------------------------------------------------
modelo_sf$lag_raw      <- NA_real_
modelo_sf$Ii_raw       <- NA_real_
modelo_sf$p_Ii_raw     <- NA_real_
modelo_sf$cluster_raw  <- NA_character_
modelo_sf$lag_raw[valid_idx]  <- lag_raw_vec
modelo_sf$Ii_raw[valid_idx]   <- lisa_raw[, 1]
modelo_sf$p_Ii_raw[valid_idx] <- lisa_raw[, 5]
modelo_sf$cluster_raw[valid_idx] <- dplyr::case_when(
y_raw[valid_idx]  >  mean(y_raw[valid_idx]) &
lag_raw_vec     >  mean(lag_raw_vec)      ~ "High-High",
y_raw[valid_idx]  <  mean(y_raw[valid_idx]) &
lag_raw_vec     <  mean(lag_raw_vec)      ~ "Low-Low",
y_raw[valid_idx]  >  mean(y_raw[valid_idx]) &
lag_raw_vec     <  mean(lag_raw_vec)      ~ "High-Low",
y_raw[valid_idx]  <  mean(y_raw[valid_idx]) &
lag_raw_vec     >  mean(lag_raw_vec)      ~ "Low-High",
TRUE                                        ~ "No sig."
)
modelo_sf$cluster_raw[ modelo_sf$p_Ii_raw > .05 ] <- "No sig."
## Paleta discreta (4 clústeres + gris) ------------------------------------
col_lisa <- c(
"High-High" = pal_qualitat[1],
"Low-Low"   = pal_qualitat[3],
"High-Low"  = pal_qualitat[2],
"Low-High"  = pal_qualitat[4],
"No sig."   = "grey85"
)
## ------------------------------------------------------------------
## 3 · Ahora sí: gráficos
## ------------------------------------------------------------------
p_scatter <- ggplot(modelo_sf,
aes(x = log_Qdens, y = lag_raw, colour = cluster_raw)) +
geom_point(alpha = .8, size = .9) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = 0, linetype = "dashed", colour = "grey60") +
geom_smooth(method = "lm", se = FALSE, linewidth = .4, colour = "black") +
scale_colour_manual(values = col_lisa, name = "") +
labs(x = "log₁₀(Q/Área)", y = "Lag espacial") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
p_lisa <- ggplot(modelo_sf) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa, name = "Clúster LISA") +
labs(title = "Clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
p_Ii <- ggplot(modelo_sf) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_gradientn(colours = pal_continuo,
name = "Ii", na.value = "white") +
labs(title = "Ii local") +
theme_minimal(base_size = 11)
(p_scatter | p_lisa | p_Ii) + patchwork::plot_layout(guides = "collect")
# ─────────────────────────────────────────────────────────────────────────────
# Paleta y nombres de clústeres  (Zissou1 → continuo; elegimos 4 cortes)
# ─────────────────────────────────────────────────────────────────────────────
pal_z  <- wesanderson::wes_palette("Zissou1", 100, type = "continuous")
col_lisa <- c(
"High-High"        = pal_z[90],   # rojo
"Low-Low"          = pal_z[10],   # azul
"High-Low"         = pal_z[70],   # naranja
"Low-High"         = pal_z[30],   # celeste
"No sig."          = "grey90"
)
# ─────────────────────────────────────────────────────────────────────────────
# 1 · SCATTERPLOT de Moran local (log_Qdens vs. lag espacial)
#     La pendiente del ajuste lineal = Moran I global                   ↑
# ─────────────────────────────────────────────────────────────────────────────
moran_I  <- moran_raw$estimate[["Moran I statistic"]]
pvalue_I <- formatC(moran_raw$p.value, format = "e", digits = 2)
p_scatter_lisa <- ggplot(modelo_sf_s,
aes(x = log_Qdens, y = lag_raw,
colour = cluster_raw)) +
geom_point(alpha = 0.8, size = 1.2) +
geom_smooth(method = "lm", se = FALSE,
colour = "black", linewidth = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = 0, linetype = "dashed", colour = "grey60") +
scale_colour_manual(values = col_lisa, name = "") +
labs(
title = "Diagrama de dispersión Moran local",
subtitle = paste0("Moran I global = ",
sprintf("%.3f", moran_I),
"  (p = ", pvalue_I, ")"),
x = "log₁₀(Q / Área)",
y = "Lag espacial"
) +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
# ─────────────────────────────────────────────────────────────────────────────
# 2 · MAPA de clústeres LISA
# ─────────────────────────────────────────────────────────────────────────────
p_moran_lisa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa, na.value = "white",
name = "Clúster LISA") +
labs(title = "Mapa: clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
# ─────────────────────────────────────────────────────────────────────────────
# 3 · MAPA de valores Ii locales
# ─────────────────────────────────────────────────────────────────────────────
p_ii_mapa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_viridis_c(name = "Ii", option = "magma",
direction = -1, na.value = "white") +
labs(title = "Mapa: valor local del estadístico Ii") +
theme_minimal(base_size = 11)
# ─────────────────────────────────────────────────────────────────────────────
# 4 · COMPOSICIÓN y guardado
# ─────────────────────────────────────────────────────────────────────────────
p_lisa_tripanel <- p_scatter_lisa +
p_moran_lisa   +
p_ii_mapa      +
patchwork::plot_layout(ncol = 3, guides = "collect")
#print(p_lisa_tripanel)
ggplot2::ggsave(
filename = here::here("Figures", "moran_local_tripanel.png"),
plot     = p_lisa_tripanel,
width    = 15,
height   = 5,
dpi      = 300
)
# ─────────────────────────────────────────────────────────────────────────────
# 3 · Paletas coherentes con las que ya definiste
# ─────────────────────────────────────────────────────────────────────────────
pal_continuo <- paletteer::paletteer_c("grDevices::Zissou 1", 100)
pal_qualitat <- paletteer::paletteer_d("wesanderson::Zissou1Continuous", 5)
col_lisa <- c(
"High-High" = pal_continuo[90],
"Low-Low"   = pal_continuo[10],
"High-Low"  = pal_continuo[70],
"Low-High"  = pal_continuo[30],
"No sig."   = "grey90"
)
# ─────────────────────────────────────────────────────────────────────────────
# 4 · Visualización tripanel (scatter + clústeres + Ii)
# ─────────────────────────────────────────────────────────────────────────────
moran_I  <- moran_raw$estimate[["Moran I statistic"]]
pvalue_I <- formatC(moran_raw$p.value, format = "e", digits = 2)
p_scatter_lisa <- ggplot(modelo_sf_s,
aes(x = log_Qdens, y = lag_raw,
colour = cluster_raw)) +
geom_point(alpha = 0.8, size = 1.2) +
geom_smooth(method = "lm", se = FALSE,
colour = "black", linewidth = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = 0, linetype = "dashed", colour = "grey60") +
scale_colour_manual(values = col_lisa, name = "") +
labs(
title    = "Diagrama de dispersión Moran local",
subtitle = paste0("Moran I = ", sprintf("%.3f", moran_I),
"  (p = ", pvalue_I, ")"),
x = "log₁₀(Q / Área)",
y = "Lag espacial"
) +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
p_moran_lisa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa, na.value = "white",
name = "Clúster LISA") +
labs(title = "Mapa: clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
p_ii_mapa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_gradientn(colours = pal_continuo,
name = "Ii", na.value = "white") +
labs(title = "Mapa: valor local del estadístico Ii") +
theme_minimal(base_size = 11)
p_lisa_tripanel <- p_scatter_lisa + p_moran_lisa + p_ii_mapa +
patchwork::plot_layout(ncol = 3, guides = "collect")
ggplot2::ggsave(
here::here("Figures", "moran_local_tripanel.png"),
plot   = p_lisa_tripanel,
width  = 15, height = 5, dpi = 300
)
# LISA
lisa_raw <- spdep::localmoran(y_raw[valid_idx], lw_sub)
# Añade columnas al mismo objeto
modelo_sf_s <- modelo_sf_s |>
dplyr::mutate(
Ii_raw   = NA_real_,
lag_raw  = NA_real_,
p_Ii_raw = NA_real_,
cluster_raw = NA_character_
)
modelo_sf_s$Ii_raw  [valid_idx] <- lisa_raw[, 1]
modelo_sf_s$p_Ii_raw[valid_idx] <- lisa_raw[, 5]
modelo_sf_s$lag_raw[valid_idx]  <- spdep::lag.listw(lw_sub, y_raw[valid_idx])
modelo_sf_s <- modelo_sf_s |>
dplyr::mutate(
cluster_raw = dplyr::case_when(
log_Qdens > mean(log_Qdens, na.rm = TRUE) &
lag_raw  > mean(lag_raw,  na.rm = TRUE) ~ "High-High",
log_Qdens < mean(log_Qdens, na.rm = TRUE) &
lag_raw  < mean(lag_raw,  na.rm = TRUE) ~ "Low-Low",
log_Qdens > mean(log_Qdens, na.rm = TRUE) &
lag_raw  < mean(lag_raw,  na.rm = TRUE) ~ "High-Low",
log_Qdens < mean(log_Qdens, na.rm = TRUE) &
lag_raw  > mean(lag_raw,  na.rm = TRUE) ~ "Low-High",
TRUE ~ "No sig."
),
cluster_raw = ifelse(p_Ii_raw > 0.05, "No sig.", cluster_raw)
)
# ─────────────────────────────────────────────────────────────────────────────
# 3 · Paletas coherentes con las que ya definiste
# ─────────────────────────────────────────────────────────────────────────────
pal_continuo <- paletteer::paletteer_c("grDevices::Zissou 1", 100)
pal_qualitat <- paletteer::paletteer_d("wesanderson::Zissou1Continuous", 5)
col_lisa <- c(
"High-High" = pal_continuo[90],
"Low-Low"   = pal_continuo[10],
"High-Low"  = pal_continuo[70],
"Low-High"  = pal_continuo[30],
"No sig."   = "grey90"
)
# ─────────────────────────────────────────────────────────────────────────────
# 4 · Visualización tripanel (scatter + clústeres + Ii)
# ─────────────────────────────────────────────────────────────────────────────
moran_I  <- moran_raw$estimate[["Moran I statistic"]]
pvalue_I <- formatC(moran_raw$p.value, format = "e", digits = 2)
p_scatter_lisa <- ggplot(modelo_sf_s,
aes(x = log_Qdens, y = lag_raw,
colour = cluster_raw)) +
geom_point(alpha = 0.8, size = 1.2) +
geom_smooth(method = "lm", se = FALSE,
colour = "black", linewidth = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = 0, linetype = "dashed", colour = "grey60") +
scale_colour_manual(values = col_lisa, name = "") +
labs(
title    = "Diagrama de dispersión Moran local",
subtitle = paste0("Moran I = ", sprintf("%.3f", moran_I),
"  (p = ", pvalue_I, ")"),
x = "log₁₀(Q / Área)",
y = "Lag espacial"
) +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
p_moran_lisa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa, na.value = "white",
name = "Clúster LISA") +
labs(title = "Mapa: clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "bottom")
p_ii_mapa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_gradientn(colours = pal_continuo,
name = "Ii", na.value = "white") +
labs(title = "Mapa: valor local del estadístico Ii") +
theme_minimal(base_size = 11)
p_lisa_tripanel <- p_scatter_lisa + p_moran_lisa + p_ii_mapa +
patchwork::plot_layout(ncol = 3, guides = "collect")
ggplot2::ggsave(
here::here("Figures", "moran_local_tripanel.png"),
plot   = p_lisa_tripanel,
width  = 15, height = 5, dpi = 300
)
p_lisa_tripanel <- p_scatter_lisa + p_moran_lisa + p_ii_mapa +
patchwork::plot_layout(ncol = 3)
ggplot2::ggsave(
here::here("Figures", "moran_local_tripanel.png"),
plot   = p_lisa_tripanel,
width  = 15, height = 5, dpi = 300
)
# ─────────────────────────────────────────────────────────────────────────────
# 0 · Paletas coherentes con el cuaderno
# ─────────────────────────────────────────────────────────────────────────────
pal_continuo <- paletteer::paletteer_c("grDevices::Zissou 1", 100)
pal_qualitat <- paletteer::paletteer_d("wesanderson::Zissou1Continuous", 5)
col_lisa <- c(
"High-High" = pal_continuo[90],   # rojo
"Low-Low"   = pal_continuo[10],   # azul
"High-Low"  = pal_continuo[70],   # naranja
"Low-High"  = pal_continuo[30],   # celeste
"No sig."   = "grey90"
)
# ─────────────────────────────────────────────────────────────────────────────
# 1 · SCATTERPLOT de Moran local
# ─────────────────────────────────────────────────────────────────────────────
m_I  <- sprintf("%.3f", moran_raw$estimate[["Moran I statistic"]])
p_I  <- formatC(moran_raw$p.value, digits = 2, format = "e")
p_scatter_lisa <- ggplot(modelo_sf_s,
aes(x = log_Qdens, y = lag_raw,
colour = cluster_raw)) +
geom_point(alpha = .8, size = 1.2) +
geom_smooth(method = "lm", se = FALSE,
colour = "black", linewidth = .5) +
geom_hline(yintercept = 0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = 0, linetype = "dashed", colour = "grey60") +
scale_colour_manual(values = col_lisa,
name   = "Tipo de\nagrupamiento") +
labs(title    = "Diagrama de dispersión Moran local",
subtitle = paste0("Moran I = ", m_I, "   (p = ", p_I, ")"),
x = "log₁₀(Q / Área)", y = "Lag espacial") +
theme_minimal(base_size = 11) +
theme(legend.position = "right")
# ─────────────────────────────────────────────────────────────────────────────
# 2 · MAPA de clústeres LISA
# ─────────────────────────────────────────────────────────────────────────────
p_moran_lisa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa,
name = "Tipo de\nagrupamiento",
na.value = "white") +
labs(title = "Mapa: clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "right")
# ─────────────────────────────────────────────────────────────────────────────
# 3 · MAPA de valores Ii
# ─────────────────────────────────────────────────────────────────────────────
p_ii_mapa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_gradientn(colours = pal_continuo,
name     = "Ii",
na.value = "white") +
labs(title = "Mapa: valor local del estadístico Ii") +
theme_minimal(base_size = 11) +
theme(legend.position = "right")
# ─────────────────────────────────────────────────────────────────────────────
# 4 · COMPOSICIÓN (ancho 1.4-1-1, sin guides = 'collect')
# ─────────────────────────────────────────────────────────────────────────────
p_lisa_tripanel <- (p_scatter_lisa | p_moran_lisa | p_ii_mapa) +
patchwork::plot_layout(widths = c(1.4, 1, 1))
ggplot2::ggsave(
filename = here::here("Figures", "moran_local_tripanel.png"),
plot     = p_lisa_tripanel,
width    = 15, height = 5, dpi = 300
)
# ─────────────────────────────────────────────────────────────────────────────
# 0 · Paletas coherentes con el cuaderno
# ─────────────────────────────────────────────────────────────────────────────
pal_continuo <- paletteer::paletteer_c("grDevices::Zissou 1", 100)
pal_qualitat <- paletteer::paletteer_d("wesanderson::Zissou1Continuous", 5)
col_lisa <- c(
"High-High" = pal_continuo[90],   # rojo
"Low-Low"   = pal_continuo[10],   # azul
"High-Low"  = pal_continuo[70],   # naranja
"Low-High"  = pal_continuo[30],   # celeste
"No sig."   = "grey90"
)
## ── 1. Calcula las medias (NO se modifica el objeto) ──────────────────────
x0 <- mean(modelo_sf_s$log_Qdens, na.rm = TRUE)
y0 <- mean(modelo_sf_s$lag_raw ,  na.rm = TRUE)
## ── 2. Scatterplot Moran local coherente con la clasificación ─────────────
p_scatter_lisa <- ggplot(modelo_sf_s,
aes(x = log_Qdens,
y = lag_raw,
colour = cluster_raw)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,
colour = "black", linewidth = 0.5) +
geom_hline(yintercept = y0, linetype = "dashed", colour = "grey60") +
geom_vline(xintercept = x0, linetype = "dashed", colour = "grey60") +
scale_colour_manual(values = col_lisa, name = "Clúster LISA") +
labs(x = "log₁₀(Q / Área)",
y = "Lag espacial",
title = "Diagrama de dispersión Moran local") +
theme_minimal(base_size = 11) +
theme(legend.position = "right")
## ── 3. Mapa de clústeres y mapa de Ii (igual que antes) ───────────────────
p_moran_lisa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = cluster_raw), colour = NA) +
scale_fill_manual(values = col_lisa, na.value = "white",
name = "Clúster LISA") +
labs(title = "Mapa: clústeres LISA de log_Qdens") +
theme_minimal(base_size = 11) +
theme(legend.position = "right")
p_ii_mapa <- ggplot(modelo_sf_s) +
geom_sf(aes(fill = Ii_raw), colour = NA) +
scale_fill_viridis_c(name = "Ii", option = "magma",
direction = -1, na.value = "white") +
labs(title = "Mapa: valor local del estadístico Ii") +
theme_minimal(base_size = 11)
## ── 4. Tripanel sin leyenda duplicada ─────────────────────────────────────
p_lisa_tripanel <- p_scatter_lisa + p_moran_lisa + p_ii_mapa +
patchwork::plot_layout(ncol = 3, guides = "auto")
ggplot2::ggsave(
filename = here::here("Figures", "moran_local_tripanel.png"),
plot     = p_lisa_tripanel,
width    = 15, height = 5, dpi = 300
)
nb_queen
?poly2nb
setwd("M:/My Drive/02_PROYECTOS/PROYECTOS MIXTOS/PROPUESTAS INVESTIGACION/2025_UNALAG/DESARROLLO/PROYECTO DE CODIGO/pedodiv-colombia")
setwd("M:/My Drive/02_PROYECTOS/PROYECTOS MIXTOS/PROPUESTAS INVESTIGACION/2025_UNALAG/DESARROLLO/PROYECTO DE CODIGO/pedodiv-colombia/Scripts")
knitr::purl('06_analisis_SAR_CAR_jerarquicos.qmd')
knitr::purl('06_analisis_SAR_CAR__jerarquicos.qmd')
#Para exportar como .R plano
# knitr::purl('06_analisis_SAR_CAR__jerarquicos.qmd')
if (!"pacman" %in% rownames(installed.packages())) install.packages("pacman")
pacman::p_load(
here,         # manejo de rutas relativas al proyecto
remotes,      # instalar paquetes desde GitHub (si llegamos a necesitarlos)
sf,           # lectura y manipulación de objetos espaciales vectoriales
dplyr,        # verbos de manipulación de data frames (filter, mutate, joins)
tidyr,        # pivoteo y desanidado de datos (pivot_longer, unnest, etc.)
readr,        # lectura/escritura rápida de archivos CSV
geojsonsf,    # GeoJSON ↔ sf rápido (geojson_sf)
rmapshaper,   # Simplificación de geometrías
stringr,      # Manipulación d textos
ggplot2,      # sistema de gráficos
ggdist,       # distribuciones y visuales tipo half-eye / histinterval
patchwork,    # combinación de gráficos ggplot (p1 + p2)
paletteer,    # acceso a múltiples paletas (viridis, wesanderson, etc.)
scales,       # helpers de ejes y transformaciones (log10, percentiles)
grid,         # utilidades de bajo nivel para gráficos (layouts, grobs)
GGally,       # correlogramas y extensiones ggplot
sjPlot,       # visualización de modelos (coeficientes, efectos marginales)
spdep,        # estructuras de vecinos y pruebas de autocorrelación
spatialreg,   # modelos SAR / SEM / SDM / SDEM / SARAR
performance,  # métricas de ajuste (pseudo-R², VIF, etc.)
classInt,     # cortes de intervalos (quantile, jenks, etc.)
INLA,         # modelos Bayesianos rápidos (CAR/BYM/Leroux)
lme4,         # modelos mixtos jerárquicos (GLMM)
MuMIn,        # R² marginal/condicional para modelos mixtos
googledrive   # autenticación y manejo de archivos en Google Drive
)
theme_set(theme_minimal(base_size = 13))
# Capa cruda tal como sale de la función externa ---------------
source(here::here("Scripts", "00_funcion_carga_ucs_procesadas_qs.R"),
encoding = "UTF-8")
# Capa cruda tal como sale de la función externa ---------------
source(here::here("Scripts", "00_funcion_carga_ucs_procesadas_qs.R"))
#Para exportar como .R plano
# knitr::purl('06_analisis_SAR_CAR__jerarquicos.qmd')
if (!"pacman" %in% rownames(installed.packages())) install.packages("pacman")
pacman::p_load(
here,         # manejo de rutas relativas al proyecto
remotes,      # instalar paquetes desde GitHub (si llegamos a necesitarlos)
sf,           # lectura y manipulación de objetos espaciales vectoriales
dplyr,        # verbos de manipulación de data frames (filter, mutate, joins)
tidyr,        # pivoteo y desanidado de datos (pivot_longer, unnest, etc.)
readr,        # lectura/escritura rápida de archivos CSV
geojsonsf,    # GeoJSON ↔ sf rápido (geojson_sf)
rmapshaper,   # Simplificación de geometrías
stringr,      # Manipulación d textos
ggplot2,      # sistema de gráficos
ggdist,       # distribuciones y visuales tipo half-eye / histinterval
patchwork,    # combinación de gráficos ggplot (p1 + p2)
paletteer,    # acceso a múltiples paletas (viridis, wesanderson, etc.)
scales,       # helpers de ejes y transformaciones (log10, percentiles)
grid,         # utilidades de bajo nivel para gráficos (layouts, grobs)
GGally,       # correlogramas y extensiones ggplot
sjPlot,       # visualización de modelos (coeficientes, efectos marginales)
spdep,        # estructuras de vecinos y pruebas de autocorrelación
spatialreg,   # modelos SAR / SEM / SDM / SDEM / SARAR
performance,  # métricas de ajuste (pseudo-R², VIF, etc.)
classInt,     # cortes de intervalos (quantile, jenks, etc.)
INLA,         # modelos Bayesianos rápidos (CAR/BYM/Leroux)
lme4,         # modelos mixtos jerárquicos (GLMM)
MuMIn,        # R² marginal/condicional para modelos mixtos
googledrive   # autenticación y manejo de archivos en Google Drive
)
theme_set(theme_minimal(base_size = 13))
# Capa cruda tal como sale de la función externa ---------------
source(here::here("Scripts", "00_funcion_carga_ucs_procesadas_qs.R"),
encoding = "UTF-8")
